---
layout: post
title: "Java Methodology"
subtitle: "Java 方法论理解"
date:	2016-08-29 23:24
author: "sher"
header-img: "img/post-bg-re-vs-ng2.jpg"
catalog: true
tags:
    - Java
    - Think
---

## 背景

今天开会的时候，cto提到Java方法论，这有点哲学概念。方法论是一个很抽象的概念，Java语言经历了十几年的打磨，无数的开发者的贡献，有大量的开源框架来使用，那到底是什么是Java的方法论，用来干什么的，这套方法论又可以帮助我们实现什么的目的。

## 方法论

认识世界，改造世界的根本方法，用什么样的方式、方法来观察事物和处理问题。概括地说，世界观主要解决世界“是什么”的问题，方法论主要解决“怎么办”的问题。方法论是一种解决问题为目标的体系或系统，系统总结最终提出一般性的原则。它是一个哲学的概念，一种世界观。

通常都是一些哲学提出的思想，中国的古代提出的辩证法，儒家思想，法国哲学家R.笛卡尔提出了理性演绎方法论，马克思论的唯物辩证法。都是一种看待事物的理论基础，了解了方法论能够帮助我们很好的了解世界，建立属于自己的价值观，世界观。

### Java方法论

Java语言是一门面向对象的语言，Java方法论，也可以归结为面向对象的方法论，那何为面向对象，如何理解OOD，OOP，是我们很好理解面向对象的体现。

* 面向对象

  通过哲学的观点来分析面向对象思想来源，西方语言中大多数抽象的概念从作为属性的形容词直接转化而来，例如 white --> whiteness 。其实中文里面是强调的更多的是依赖关系，我们谈论一个事物，更多说的是事物的具体大小，很少抽象出size。

  亚里士多德认为铁球在空气中下落是因为它具有“重性”，而木块在水中漂浮是因为木块具有“轻性”。这种将一切原因归结为事物内在属性的传统在一定程度上妨碍了西方人认识到背景的存在和作用，但使得他们可以把问题简化。

  将具有某一属性的所有物体定义为一个集合，通过类型来把握不变的事实是一种非常重要且有效的认识策略。
  我们通常所定义的class，也可以看做是具有相同属性的一个集合名称，老师，就是具有老师所有属性一个抽象。

* 面向对象三大要素

  封装，继承，多态  每个人根据自己经历不同，理解的层次，关注的角度也会不同，封装从基本元素的角度来考虑，就是把一些相同属性及行为的归结到一起，例如学生类，就是把学生特有的属性定义集合在一起，对象就是具体实例化出的实体，具体的实体是变化的，基于数据的不同可以创造各种实体对象。所以属性特征是不变的，具体的对象是变化的。

  > 封装：封装的意义，在于明确标识出允许外部使用的所有成员函数和数据项，或者叫接口。

    有了封装，就可以明确区分内外，使得类实现者可以修改封装内的东西而不影响外部调用者；而外部调用者也可以知道自己不可以碰哪里。这就提供一个良好的合作基础——或者说，只要接口这个基础约定不变，则代码改变不足为虑。

    真正的封装是，经过深入的思考，做出良好的抽象，给出“完整且最小”的接口，并使得内部细节可以对外透明（注意：对外透明的意思是，外部调用者可以顺利的得到自己想要的任何功能，完全意识不到内部细节的存在。

   继承，可以从基类继承下来的子类，子类会具有基类属性和方法。也是一种重复利用的手段。多态，根据同一个接口，可以有多种实现，对外来讲，我们还是统一的接口。

  [参考知乎](https://www.zhihu.com/question/20275578)
